{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Implementation of PyTorch CNN"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "In my last report I coded a simple LSTM network using pytorch. This week I want to learn more about using PyTorch but for coding a convolutional neural network. To better understand PyTorch I'm going to include a dictionary of the functions that will be needed that will be needed to code my CNN in PyTorch.\n",
    "\n",
    "To learn more about this task, I am referencing the PyTorch documentation and using the CIFAR-10 dataset so it can be trained on my home GPU. \n",
    "\n",
    "Pytorch Documentation link: https://pytorch.org/docs/stable/index.html"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Step 1: Importing Necessary packages and Examining CIFAR-10"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "import torch\n",
    "import torch.nn as nn\n",
    "import torch.nn.functional as F\n",
    "import torchvision\n",
    "import torchvision.transforms as transforms\n",
    "import torch.optim as optim\n",
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "cuda:0\n"
     ]
    }
   ],
   "source": [
    "device = torch.device(\"cuda:0\" if torch.cuda.is_available() else \"cpu\")\n",
    "\n",
    "# Assuming that we are on a CUDA machine, this should print a CUDA device:\n",
    "\n",
    "print(device)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "CIFAR10 datasets should be downloaded in this step. If not I found it can be obtained here: https://www.cs.toronto.edu/~kriz/cifar.html but the code will require some editing."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Files already downloaded and verified\n",
      "Files already downloaded and verified\n"
     ]
    }
   ],
   "source": [
    "transform = transforms.Compose(\n",
    "    [transforms.ToTensor(),\n",
    "     transforms.Normalize((0.5, 0.5, 0.5), (0.5, 0.5, 0.5))])\n",
    "\n",
    "trainset = torchvision.datasets.CIFAR10(root='./data', train=True,\n",
    "                                        download=True, transform=transform)\n",
    "\n",
    "trainloader = torch.utils.data.DataLoader(trainset, batch_size=256,\n",
    "                                          shuffle=True, num_workers=2)\n",
    "\n",
    "testset = torchvision.datasets.CIFAR10(root='./data', train=False,\n",
    "                                       download=True, transform=transform)\n",
    "testloader = torch.utils.data.DataLoader(testset, batch_size=256,\n",
    "                                         shuffle=False, num_workers=2)\n",
    "\n",
    "classes = ('plane', 'car', 'bird', 'cat',\n",
    "           'deer', 'dog', 'frog', 'horse', 'ship', 'truck')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Description of code above:\n",
    "\n",
    "- transforms.compose: chains together multiple image transformations\n",
    "- transforms.normalize: set to 0.5 for the mean and standard deviation parameters of each channel as they have range [0,1]. Using 0.5 as the parameters normalizes the image in the range [-1,1]. Example: (0-0.5)/0.5 = -1.\n",
    "- trainset line grabs the training data and applied the specified transformation above\n",
    "- torch.utils.data.DataLoader: iterable over a dataset that combines a dataset and a sampler"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "plane   cat   dog  bird   dog   cat  deer  ship   cat   dog  frog   car  ship horse horse  bird\n"
     ]
    }
   ],
   "source": [
    "imgset_loader = torch.utils.data.DataLoader(trainset, batch_size=16,\n",
    "                                          shuffle=True, num_workers=2)\n",
    "\n",
    "\n",
    "def imshow(img):\n",
    "    img = img / 2 + 0.5     # unnormalize\n",
    "    npimg = img.numpy()\n",
    "    plt.imshow(np.transpose(npimg, (1, 2, 0)))\n",
    "    plt.show()\n",
    "\n",
    "\n",
    "# get some random training images\n",
    "dataiter = iter(imgset_loader)\n",
    "images, labels = dataiter.next()\n",
    "\n",
    "# show images\n",
    "imshow(torchvision.utils.make_grid(images, nrow=4))\n",
    "# print labels\n",
    "print(' '.join('%5s' % classes[labels[j]] for j in range(16)))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Here we iterate over the dataset (trainloader) to get a batch of images and labels. Torchvision.utils.make_grid provides us a convenient way of making a grid of images."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Building the CNN\n",
    "Before I jump into building the CNN I want to explore some of the common methods I will be using from the nn module from PyTorch. This is not a complete list of possible functions as there is a vast amount of functionality in the Pytorch nn module, but this should cover the majority of what we have discussed so far.\n",
    "\n",
    "#### Containers\n",
    "- Module: Base class for all neural network modules\n",
    "- ModuleList/Dict: holds submodules in a list/dict\n",
    "- ParameterList/Dict: holds parameters in a list/dict\n",
    "- Sequential: Modules can be added in the order they are passed. Can also be passed in as a dict.\n",
    "\n",
    "#### Convolution Layers\n",
    "- nn.Conv1d: Applies a 1D convolution over an input that can be used to alter the number of channels. Can be used to for groupwise convolution by changing the number of out channels.\n",
    "- nn.Conv2d: The \"traditional\" convolution that applies a two dimensional kernel over an input. Can be used for depthwise convolution by changing the groups parameter.\n",
    "- nn.Conv3d: Applies a 3D convolution over an input signal\n",
    "- nn.ConvTranspose1d/2d/3d: Applies a 1D/2D/3D transposed convolution over an input image composed of multiple filters. Can be thought of as the gradient with respect to its input (as apposed to the objective function). Also known as deconvolution or fractionally strided convolution, however, it not an actual deconvolution operation.\n",
    "\n",
    "\n",
    "#### Pooling Layers\n",
    "- nn.MaxPool1d/2d/3d: Applies the max pool operation given a kernel size, stride, padding, and dilation\n",
    "- nn.AvgPool 1d/2d/3d: Applies average pooling over an input. It is interesting to note that there is actually no global average pooling in pytorch. This would have to be accomplished by setting the kernel size equal to the input size or simply taking the mean manually. \n",
    "\n",
    "#### Linear Layers\n",
    "- nn.Identity: a placeholder identity operator that is argument insensitive\n",
    "- nn.Linear: Applies a linear transformation to the incoming data. Equivalent to a fully connected or Dense layer in Keras.\n",
    "- nn.Bilinear: Applies the transformation $x_1^TAx_2 + b$ to data.\n",
    "\n",
    "#### Dropout Layers\n",
    "- nn.Dropout: Randomly zeroes some of the elements of the input tensor with probability p using samples from a Bernoulli distribution.\n",
    "- nn.Dropout2d/3d: Randomly zero out entire channels of the j-th channel of the i-th sample in a batched input\n",
    "\n",
    "#### Loss Functions\n",
    "- A very large selection of built in loss functions. For Image classification they have nn.CrossEntropyLoss."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Model Definition\n",
    "\n",
    "To build a model we make a class for out model and pass in nn.Module from torch. In the class initialization we call super so we can inherit the modules in nn. For simple models we will make the layers attributes of our class, however, more complex models use user defiend functions or even other classes to construct layers. Then we define the forward pass function that will dictate how output from one layer is fed into the next.\n",
    "\n",
    "For the sake of training on a GPU at home, simplicity, and ability to make changes easily I'm going to use a VGG-like network, but use the average pool idea at the end from the paper Going Deeper with Convolutions."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "CNN(\n",
       "  (conv1): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1))\n",
       "  (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1))\n",
       "  (pool): MaxPool2d(kernel_size=2, stride=1, padding=0, dilation=1, ceil_mode=False)\n",
       "  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
       "  (conv3): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1))\n",
       "  (conv4): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1))\n",
       "  (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
       "  (conv5): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1))\n",
       "  (conv6): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1))\n",
       "  (conv7): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1))\n",
       "  (conv8): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1))\n",
       "  (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
       "  (conv9): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1))\n",
       "  (conv10): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1))\n",
       "  (conv11): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1))\n",
       "  (conv12): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1))\n",
       "  (bn4): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
       "  (globalpool): AvgPool2d(kernel_size=7, stride=7, padding=0)\n",
       "  (dropout): Dropout(p=0.4, inplace=False)\n",
       "  (fc1): Linear(in_features=512, out_features=10, bias=True)\n",
       ")"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "class CNN(nn.Module):\n",
    "    def __init__(self):\n",
    "        super(CNN, self).__init__()\n",
    "        \n",
    "        self.conv1 = nn.Conv2d(in_channels = 3, out_channels = 64, kernel_size = 3)\n",
    "        self.conv2 = nn.Conv2d(in_channels = 64, out_channels = 64, kernel_size = 3)\n",
    "        self.pool = nn.MaxPool2d(kernel_size = 2 , stride = 1)\n",
    "        self.bn1 =  nn.BatchNorm2d(64)\n",
    "        \n",
    "        self.conv3 = nn.Conv2d(in_channels = 64, out_channels = 128, kernel_size = 3)\n",
    "        self.conv4 = nn.Conv2d(in_channels = 128, out_channels = 128, kernel_size = 3)\n",
    "        self.bn2 = nn.BatchNorm2d(128)\n",
    "        \n",
    "        self.conv5 = nn.Conv2d(in_channels = 128, out_channels = 256, kernel_size = 3)\n",
    "        self.conv6 = nn.Conv2d(in_channels = 256, out_channels = 256, kernel_size = 3)\n",
    "        self.conv7 = nn.Conv2d(in_channels = 256, out_channels = 256, kernel_size = 3)\n",
    "        self.conv8 = nn.Conv2d(in_channels = 256, out_channels = 256, kernel_size = 3)\n",
    "        self.bn3 = nn.BatchNorm2d(256)\n",
    "        \n",
    "        self.conv9 = nn.Conv2d(in_channels = 256, out_channels = 512, kernel_size = 3)\n",
    "        self.conv10 = nn.Conv2d(in_channels = 512, out_channels = 512, kernel_size = 3)\n",
    "        self.conv11 = nn.Conv2d(in_channels = 512, out_channels = 512, kernel_size = 3)\n",
    "        self.conv12 = nn.Conv2d(in_channels = 512, out_channels = 512, kernel_size = 3)\n",
    "        self.bn4 = nn.BatchNorm2d(512)\n",
    "        \n",
    "        self.globalpool = nn.AvgPool2d(7)   #kernel set to image size for global pooling\n",
    "        self.dropout = nn.Dropout(0.4)\n",
    "        self.fc1 = nn.Linear(512*1*1,10) #channels times current image size\n",
    "        \n",
    "        \n",
    "    def forward(self, x):\n",
    "        x = self.conv1(x)\n",
    "        x = self.conv2(x)\n",
    "        x = self.pool(x)\n",
    "        x = self.bn1(x)\n",
    "        x = F.relu(x)\n",
    "        #print(x.shape)\n",
    "        \n",
    "        x = self.conv3(x)\n",
    "        x = self.conv4(x)\n",
    "        x = self.bn2(x)\n",
    "        x = F.relu(x)\n",
    "        #print(x.shape)\n",
    "        \n",
    "        x = self.conv5(x)\n",
    "        x = self.conv6(x)\n",
    "        x = self.conv7(x)\n",
    "        x = self.conv8(x)\n",
    "        x = self.bn3(x)\n",
    "        x = F.relu(x)\n",
    "        #print(x.shape)\n",
    "        \n",
    "        x = self.conv9(x)\n",
    "        x = self.conv10(x)\n",
    "        x = self.conv11(x)\n",
    "        x = self.conv12(x)\n",
    "        x = self.bn4(x)\n",
    "        x = self.globalpool(x)\n",
    "        x = self.dropout(x)\n",
    "    \n",
    "        #flatten\n",
    "        #print(x.shape)\n",
    "        x = x.view(-1,512*1*1) #filters times image size to flatten\n",
    "        x = self.fc1(x) \n",
    "    \n",
    "        return x\n",
    "    \n",
    "#Instantiate the Net\n",
    "net = CNN()\n",
    "net.to(device)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Define a Loss Function and Optimizer\n",
    "Calling .to(device) allows the network to be trained on the GPU as I specified the device as my GPU at the beginning of the code. Because we have multi class image classification we are goiing to use categorical cross entropty and SGD with momentum. The nn.CrossEntropyLoss function combines nn.LogSoftmax() and nn.NLLLoss() which is why softmax is not included in the network structure as the final layer."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "loss_fn = nn.CrossEntropyLoss()\n",
    "optimizer = optim.SGD(net.parameters(), lr=0.001, momentum=0.9)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Training\n",
    "We will loop over the data and feed the inputs to the network.\n",
    "\n",
    "The steps for training in PyTorch are:\n",
    "\n",
    "- choose number of epochs\n",
    "- enumerate over the data in batches as specified in the beginning of our code\n",
    "- initialize the gradients to 0 with each pass because PyTorch accumulates the gradients on subsequent backward passes\n",
    "- perform forward pass defined in our CNN class (seen in net(inputs))\n",
    "- calculate the loss( seen as a call to loss_fn )\n",
    "- perform backpropogation (loss.backward())\n",
    "- take a step with the optimizer i.e. updating the weights based on the current gradient (optimizer.step())\n",
    "\n",
    "We repeat these steps until we reach the desired number of epochs or we have a stop criterion"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Finished Training\n",
      "52.969714005 Minutes\n"
     ]
    }
   ],
   "source": [
    "import time\n",
    "tic = time.clock()\n",
    "training_errors = []\n",
    "validation_accuracy = []\n",
    "correct = 0\n",
    "total = 0\n",
    "\n",
    "\n",
    "for epoch in range(50):  # loop over the dataset multiple times\n",
    "    epoch_loss = 0.0\n",
    "    running_loss = 0.0\n",
    "    for i, data in enumerate(trainloader, 0):\n",
    "        # get the inputs; data is a list of [inputs, labels]\n",
    "        inputs, labels = data[0].to(device), data[1].to(device)\n",
    "        # zero the parameter gradients\n",
    "        optimizer.zero_grad()\n",
    "\n",
    "        # forward + backward + optimize\n",
    "        outputs = net(inputs)\n",
    "        loss = loss_fn(outputs, labels)\n",
    "        loss.backward()\n",
    "        optimizer.step()\n",
    "\n",
    "        epoch_loss += outputs.shape[0] * loss.item()\n",
    "        \n",
    "        # print statistics\n",
    "        running_loss += loss.item()\n",
    "        if i % 500 == 499:    # print every 1000 mini-batches\n",
    "            print('[%d, %5d] loss: %.3f' %\n",
    "                  (epoch + 1, i + 1, running_loss / 100))\n",
    "            running_loss = 0.0\n",
    "    training_errors.append(epoch_loss)\n",
    "        \n",
    "    ###########Validation Error Tracking##############\n",
    "    \n",
    "    with torch.no_grad():\n",
    "        for data in testloader:\n",
    "            images, labels = data[0].to(device), data[1].to(device)\n",
    "            outputs = net(images)\n",
    "            _, predicted = torch.max(outputs.data, 1)\n",
    "            total += labels.size(0)\n",
    "            correct += (predicted == labels).sum().item()\n",
    "\n",
    "        validation_errors.append(correct/total)\n",
    "        \n",
    "        \n",
    "        \n",
    "        \n",
    "print('Finished Training')\n",
    "toc = time.clock()\n",
    "print((toc - tic)/60, \"Minutes\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Taking a look at the training error during training."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.plot(training_errors)\n",
    "plt.xlabel(\"Epochs\")\n",
    "plt.ylabel(\"Loss\")\n",
    "plt.title(\"Error During Training by Epoch\");"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The model converges after roughly 40 epochs, however, given the near perfect fit on the training data I am expecting that our model is quite overfit."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Testing\n",
    "\n",
    "The testing phase incorporates identical code that we have already covered, but replacing the training objects with the test objects. Some important things to note here:\n",
    "\n",
    "- we use torch.no_grad() to deactivates the optimizer\n",
    "- we then loop over the data in the testloader to get the images and labels\n",
    "- we predict the labels by calling net(images) which passes our image through the network"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "correct = 0\n",
    "total = 0\n",
    "with torch.no_grad():\n",
    "    for data in testloader:\n",
    "        images, labels = data[0].to(device), data[1].to(device)\n",
    "        outputs = net(images)\n",
    "        _, predicted = torch.max(outputs.data, 1)\n",
    "        total += labels.size(0)\n",
    "        correct += (predicted == labels).sum().item()\n",
    "\n",
    "print('Accuracy of the network on the 10000 test images: %d %%' % (\n",
    "    100 * correct / total))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "With this current simple architecture we were able to get a test accuracy of 76%. If we examine the graph for the training loss across epochs, we can see there is evidence of overfitting as we achieve nearly 0 loss, but only have 76% accuracy. \n",
    "\n",
    "In this notebook I learned the basics of imeplementing a CNN in PyTorch. While looking through examples online, I found that many large networks have blocks of the network put into functions or classes. While this technique makes the code cleaner and ultimately results in less lines of code written, I found it slightly confusing to implement for my first try. The technique I implemented appears more viable for smaller networks with a simple archtitecture and comes with the benefit of making the network easier to visualize. For example, you can follow the forward function to see what layers are being used without having to jump to separate classes. For coding CNNs in the future I would like to learn how to better store the building blocks in classes or functions. "
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.10"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
